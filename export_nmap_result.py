import xml.etree.ElementTree as ET

def export_data(data_path):
    port_result = []
    with open(f"{data_path}",'r') as f:
        data = f.read()
    try:
        root = ET.fromstring(data)
        # print(data)
        port_id = ''
        protocol = ''
        state = ''
        service_name = ''
        service_product = ''
        service_version = ''
        hostname = ''
        service_servicefp = ''
        service_service_extra = ''
        
        for port in root.findall('.//port'):
            script_id = ''
            script_output = ''
            port_id = port.get('portid') or ''
            print(port_id)
            protocol = port.get('protocol') or ''
            state = port.find('.//state').get('state') or ''
            service_name = port.find('.//service').get('name') or ''
            service_product = port.find('.//service').get('product') or ''
            service_version = port.find('.//service').get('version') or ''
            hostname = port.find('.//service').get('hostname') or ''
            scripts = port.findall('script')
            
            for i in scripts:
                script_id = i.get('id') or ''
                script_output = i.get('output') or ''
            service_servicefp = port.find('.//service').get('servicefp') or ''
            service_service_extra = port.find('.//service').get('extrainfo') or ''
            version = service_product + ' ' + service_version
            port_data = {
                "port" : port_id,
                "protocol" : protocol,
                "state" : state,
                "service": service_name,
                "version" : version,
                # "scan" : {script_id: script_output},
                "extra_info" :  {"hostname": hostname,"servicefp":service_servicefp,"extrainfo":service_service_extra}
            }
            print(port_data)
            print("-----------------\n\n")
            port_result.append(port_data)
        return port_result
    except Exception as e:
        return {"status": f" extracting data {e}"}, 200

